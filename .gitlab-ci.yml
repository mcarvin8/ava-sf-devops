cache:
  key: ${CI_COMMIT_REF_NAME}
  paths:
    - .sf/
    - .sfdx/

stages:
  - pipeline
  - test
  - quality
  - destroy
  - deploy

variables:
  DEPLOY_TIMEOUT: 240
  DEPLOY_PACKAGE: "package.xml"
  DESTRUCTIVE_CHANGES_PACKAGE: "destructiveChanges/destructiveChanges.xml"
  DESTRUCTIVE_PACKAGE: "destructiveChanges/package.xml"
  DESTRUCTIVE_TESTS: "AccountTriggerHandlerTest ContactTriggerHandlerTest OpportunityTriggerHandlerTest LeadTriggerHandlerTest"
  SLACK_WEBHOOK: https://hooks.slack.com/services/

#####################################################
# Define a container to install the Salesforce CLI.
####################################################
.salesforce-container:
  image: ubuntu:latest
  before_script:
    - apt-get update
    - apt-get install -y curl git jq
    - curl -fsSL https://deb.nodesource.com/setup_lts.x | bash -
    - apt-get install -y nodejs
    - npm install --global @salesforce/cli@latest
    - echo y | sf plugins install sfdx-git-delta@latest
    - echo y | sf plugins install apextestlist@latest
    - echo y | sf plugins install sf-package-combiner@latest
    - sf version --verbose --json
    - sf sgd:source:delta --from $BEFORE_SHA --to $CI_COMMIT_SHA --output "."
    - echo $AUTH_URL | sf org login sfdx-url --set-default --alias $AUTH_ALIAS --sfdx-url-stdin

####################################################
# Rollback pipeline.
# Only runs on web-based pipelines when $SHA variable is provided.
####################################################
rollback:
  stage: pipeline
  rules:
    - if: $CI_PIPELINE_SOURCE == 'web' && $SHA
      when: always
    - when: never
  allow_failure: false
  before_script:
    - git fetch -q
    - git config user.name "${BOT_NAME}"
    - git config user.email "${BOT_USER_NAME}@noreply.${CI_SERVER_HOST}"
    - git checkout -q $CI_COMMIT_BRANCH
    - git pull --ff -q
  script:
    - source ./scripts/bash/rollback.sh
    - git push "https://${BOT_NAME}:${PROJECT_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"
  after_script:
    - git -c advice.detachedHead=false checkout -q $CI_COMMIT_SHORT_SHA
    - git branch -D $CI_COMMIT_BRANCH
  tags: 
    - aws,prd,us-west-2

####################################################
# Push commits on main branch back to sandbox branches.
# Remove depending on your branching strategy.
####################################################
prodBackfill:
  stage: pipeline
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == 'push'
      when: always
    - when: never
  allow_failure: true
  script:
    - source ./scripts/bash/merge_main_into_sbx.sh
  tags: 
    - aws,prd,us-west-2

####################################################
# Scheduled Apex Test Run jobs. Only to be run on schedules with the quality job.
####################################################
test:unit:
  extends: .salesforce-container
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == 'schedule' && $JOB_NAME == 'unitTest'
      when: always
    - when: never
  allow_failure: false
  artifacts:
    paths:
      - test_run_id.txt
    expire_in: 1 day 
  script:
    - sf apex run test --test-level RunLocalTests --result-format human > ./id.txt
    - source ./scripts/bash/extract_test_id.sh
  tags:
    - aws,prd,us-west-2

test:postrun:
  extends: .salesforce-container
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == 'schedule' && $JOB_NAME == 'unitTest'
      when: delayed
      start_in: 4 hours
      needs: ['test:unit']
    - when: never
  allow_failure: false
  artifacts:
    paths:
      - coverage.xml
      - coverage/*
    expire_in: 7 days
  script:
    - echo y | sf plugins install apex-code-coverage-transformer@latest
    - TEST_RUN_ID=$(cat test_run_id.txt)
    # set || true so job passes even if there are failed tests
    - sf apex get test --test-run-id $TEST_RUN_ID --code-coverage -r json -d "coverage" > result.json || true
    - source ./scripts/bash/parse_test_result.sh
  after_script:
    - source ./scripts/bash/post_test_result.sh; share_slack_update_build
  tags:
    - aws,prd,us-west-2

####################################################
# Scan the code base with SonarQube.
####################################################
quality:
  image:
    name: sonarsource/sonar-scanner-cli:5.0.1
  stage: quality
  cache:
    key: $CI_JOB_NAME
    paths:
      - .sonar/cache
  rules:
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'develop' || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'fullqa' || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_PIPELINE_SOURCE == 'schedule' && $JOB_NAME == 'unitTest'
      when: always
      variables:
        SONAR_REF: $CI_COMMIT_REF_NAME
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'fullqa' || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'develop'
      changes:
        - '**/classes/*.cls'
        - '**/triggers/*.trigger'
      variables:
        SONAR_REF: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      when: always
    - when: never
  allow_failure: true
  variables:
    SONAR_USER_HOME: '${CI_PROJECT_DIR}/.sonar'
    GIT_DEPTH: '0'
    SONAR_LOGIN: $SONAR_TOKEN
    SONAR_HOST_URL: $SONAR_URL
    SONAR_GATE: 'false'
  script:
    - |
      if [ -f coverage.xml ]; then
        sonar-scanner \
          -Dsonar.qualitygate.wait=$SONAR_GATE \
          -Dsonar.projectKey=$CI_PROJECT_PATH_SLUG \
          -Dsonar.gitlab.ref_name=$SONAR_REF \
          -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHORT_SHA \
          -Dsonar.coverageReportPaths=coverage.xml
      else
        sonar-scanner \
          -Dsonar.qualitygate.wait=$SONAR_GATE \
          -Dsonar.projectKey=$CI_PROJECT_PATH_SLUG \
          -Dsonar.gitlab.ref_name=$SONAR_REF \
          -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHORT_SHA
      fi
  tags:
    - aws,prd,us-west-2

####################################################
# Validate metadata in a Salesforce org.
####################################################
.validate-metadata:
  extends: .salesforce-container
  artifacts:
    paths:
      - coverage.xml
    expire_in: 7 days
  variables:
    # This will work in merge request pipelines and merged results pipelines
    BEFORE_SHA: $CI_MERGE_REQUEST_DIFF_BASE_SHA
    COMMIT_MSG: $CI_MERGE_REQUEST_DESCRIPTION
  cache:
    key: ${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}
    paths:
      - .sf/
      - .sfdx/
  script:
    - echo y | sf plugins install apex-code-coverage-transformer@latest
    - source ./scripts/bash/create_package.sh
    - source ./scripts/bash/convert_package_to_list.sh
    - source ./scripts/bash/package_check.sh
    - source ./scripts/bash/deploy_metadata_sf.sh
  after_script:
    - source ./scripts/bash/deploy_slack_status.sh; share_slack_update_build
    - rm $DEPLOY_PACKAGE

####################################################
# Deploy metadata into a Salesforce org.
####################################################
.deploy-metadata:
  extends: .salesforce-container
  variables:
    BEFORE_SHA: $CI_COMMIT_BEFORE_SHA
    COMMIT_MSG: $CI_COMMIT_MESSAGE
  script:
    - source ./scripts/bash/package_check.sh
    - source ./scripts/bash/create_package.sh
    - source ./scripts/bash/convert_package_to_list.sh
    - source ./scripts/bash/deploy_metadata_sf.sh
  after_script:
    - source ./scripts/bash/deploy_slack_status.sh; share_slack_update_build
    - rm $DEPLOY_PACKAGE

####################################################
# Destroy metadata in a Salesforce org.
# Destructive Apex deployments require tests in Production.
# Ensure environment name is "prd".
####################################################
.destroy-metadata:
  extends: .salesforce-container
  variables:
    BEFORE_SHA: $CI_COMMIT_BEFORE_SHA
  script:
    - source ./scripts/bash/destroy_metadata_sf.sh
  after_script:
    - source ./scripts/bash/deploy_slack_status.sh; share_slack_update_build

####################################################
# Declare jobs for the sandbox org.
####################################################
test:predeploy:dev:
  extends: .validate-metadata
  stage: test
  resource_group: dev
  rules:
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'dev' || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'fqa' || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'dev'
      when: manual
  allow_failure: false
  variables:
    AUTH_ALIAS: SANDBOX
    AUTH_URL: $SANDBOX_AUTH_URL
  environment:
    name: validate-sandbox
    url: https://avalara--dev.sandbox.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

deploy:dev:
  extends: .deploy-metadata
  stage: deploy
  resource_group: dev
  rules:
    - if: $SANDBOX_DISABLED
      when: never
    - if: $CI_COMMIT_REF_NAME == 'dev' && $CI_PIPELINE_SOURCE == 'push'
      when: always
  allow_failure: false
  variables:
    AUTH_ALIAS: SANDBOX
    AUTH_URL: $SANDBOX_AUTH_URL
  environment:
    name: sandbox
    url: https://avalara--dev.sandbox.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

destroy:dev:
  extends: .destroy-metadata
  stage: destroy
  resource_group: dev
  rules:
    - if: $SANDBOX_DISABLED
      when: never
    - if: $CI_COMMIT_REF_NAME == 'dev' && $CI_PIPELINE_SOURCE == 'push'
      when: always
  allow_failure: true
  variables:
    AUTH_ALIAS: SANDBOX
    AUTH_URL: $SANDBOX_AUTH_URL
  environment:
    name: sandbox
    url: https://avalara--dev.sandbox.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

####################################################
# Declare jobs for the fqa org.
####################################################
test:predeploy:fqa:
  extends: .validate-metadata
  stage: test
  resource_group: fqa
  rules:
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'dev' || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'fqa' || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'fqa'
      when: manual
  allow_failure: false
  variables:
    AUTH_ALIAS: FQA
    AUTH_URL: $FQA_AUTH_URL
  environment:
    name: validate-fqa
    url: https://avalara--fqa.sandbox.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

deploy:fqa:
  extends: .deploy-metadata
  stage: deploy
  resource_group: fqa
  rules:
    - if: $FQA_DISABLED
      when: never
    - if: $CI_COMMIT_REF_NAME == 'fqa' && $CI_PIPELINE_SOURCE == 'push'
      when: always
  allow_failure: false
  variables:
    AUTH_ALIAS: FQA
    AUTH_URL: $FQA_AUTH_URL
  environment:
    name: fqa
    url: https://avalara--fqa.sandbox.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

destroy:fqa:
  extends: .destroy-metadata
  stage: destroy
  resource_group: fqa
  rules:
    - if: $FQA_DISABLED
      when: never
    - if: $CI_COMMIT_REF_NAME == 'fqa' && $CI_PIPELINE_SOURCE == 'push'
      when: always
  allow_failure: true
  variables:
    AUTH_ALIAS: FQA
    AUTH_URL: $FQA_AUTH_URL
  environment:
    name: fqa
    url: https://avalara--fqa.sandbox.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

####################################################
# Declare jobs for the production org.
####################################################
test:predeploy:prd:
  extends: .validate-metadata
  stage: test
  resource_group: prd
  rules:
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'dev' || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'fqa' || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
      when: manual
  allow_failure: false
  variables:
    AUTH_ALIAS: PRD
    AUTH_URL: $PRD_AUTH_URL
  environment:
    name: validate-prod
    url: https://avalara.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

deploy:prd:
  extends: .deploy-metadata
  stage: deploy
  resource_group: prd
  rules:
    - if: $PRD_DISABLED
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == 'push'
      when: always
  allow_failure: false
  variables:
    AUTH_ALIAS: PRD
    AUTH_URL: $PRD_AUTH_URL
  environment:
    name: prd
    url: https://avalara.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

destroy:prd:
  extends: .destroy-metadata
  stage: destroy
  resource_group: prd
  rules:
    - if: $PRD_DISABLED
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == 'push'
      when: always
  allow_failure: true
  variables:
    AUTH_ALIAS: PRD
    AUTH_URL: $PRD_AUTH_URL
  environment:
    name: prd
    url: https://avalara.my.salesforce.com
  tags: 
    - aws,prd,us-west-2
